<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>yokomotod.io</title>
    <link>https://yokomotod.io/en/</link>
    <description>Recent content on yokomotod.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&amp;copy;2017 yokomotod</copyright>
    <lastBuildDate>Sun, 17 Sep 2017 13:38:11 +0900</lastBuildDate>
    
	<atom:link href="https://yokomotod.io/en/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>2017 09 17 Use Multi Stage Docker Build</title>
      <link>https://yokomotod.io/en/2017/09/17/2017-09-17-use-multi-stage-docker-build/</link>
      <pubDate>Sun, 17 Sep 2017 13:38:11 +0900</pubDate>
      
      <guid>https://yokomotod.io/en/2017/09/17/2017-09-17-use-multi-stage-docker-build/</guid>
      <description>I had wrote Dockerfile like this, to deploy Node.js application written by TypeScrpt to k8s FROM node:8.5.0 RUN apt-get update \ &amp;amp;&amp;amp; apt-get install -y --no-install-recommends \ apt-transport-https \ &amp;amp;&amp;amp; rm -rf /var/lib/apt/lists/* RUN apt-get update \ &amp;amp;&amp;amp; apt-get install -y --no-install-recommends \ いろいろ &amp;amp;&amp;amp; rm -rf /var/lib/apt/lists/* EXPOSE 3000 RUN mkdir -p /usr/src/app WORKDIR /usr/src/app COPY package.json yarn.lock /usr/src/app/ RUN yarn install COPY . /usr/src/app RUN</description>
    </item>
    
    <item>
      <title>tsc --watch --skipLibCheck</title>
      <link>https://yokomotod.io/en/2017/08/18/tsc---watch---skiplibcheck/</link>
      <pubDate>Fri, 18 Aug 2017 03:07:19 +0900</pubDate>
      
      <guid>https://yokomotod.io/en/2017/08/18/tsc---watch---skiplibcheck/</guid>
      <description>tsc --watch --skipLibCheck  good speed.
normal full compile
Files: 464 Lines: 97878 Nodes: 431416 Identifiers: 142914 Symbols: 108604 Types: 37006 Memory used: 230040K I/O read: 0.05s I/O write: 1.35s Parse time: 1.27s Bind time: 0.59s Check time: 4.40s Emit time: 3.50s Total time: 9.77s  full compile + skipLibCheck
Files: 464 Lines: 97878 Nodes: 431416 Identifiers: 142914 Symbols: 92415 Types: 17081 Memory used: 199322K I/O read: 0.04s I/O write: 0.</description>
    </item>
    
    <item>
      <title>Contributed to TypeScript&#39;s `lib.d.ts`</title>
      <link>https://yokomotod.io/en/2017/08/17/contributed-to-typescripts-lib.d.ts/</link>
      <pubDate>Thu, 17 Aug 2017 00:04:18 +0900</pubDate>
      
      <guid>https://yokomotod.io/en/2017/08/17/contributed-to-typescripts-lib.d.ts/</guid>
      <description>I found the wrong non nullable type in TypeScript&amp;rsquo;s DOM API definition(lib.d.ts) so I send PR about that. And it was merged, yeah.
Microsoft/TypeScript#16543
Microsoft/TSJS-lib-generator#268</description>
    </item>
    
    <item>
      <title>Migrated to Github Pages</title>
      <link>https://yokomotod.io/en/2017/08/13/migrated-to-github-pages/</link>
      <pubDate>Sun, 13 Aug 2017 00:00:00 +0900</pubDate>
      
      <guid>https://yokomotod.io/en/2017/08/13/migrated-to-github-pages/</guid>
      <description>I migrated this blog to github pages hosting, as a result. The CGP load balancer is expencive for just routing GS hosted content.
This is memo for that.
On GitHub Pages, choose project page(USER.github.io/PROJECT.github.io) and publish /docs setting. It seems that we can use only top directory pushlish setting, if we choose user page(USER.github.io).
On hugo, add one line in config.toml.
publishDir = &amp;quot;docs&amp;quot;  build and push, then, https://yokomotod.github.io/yokomotod-io.github.io becomes to visible.</description>
    </item>
    
    <item>
      <title>Deploy Hugo on Google Cloud Storage</title>
      <link>https://yokomotod.io/en/2017/01/02/deploy-hugo-on-google-cloud-storage/</link>
      <pubDate>Mon, 02 Jan 2017 22:41:23 +0900</pubDate>
      
      <guid>https://yokomotod.io/en/2017/01/02/deploy-hugo-on-google-cloud-storage/</guid>
      <description>Deploy part of the Hugo blog site created in last post.
Deploy target：Google Cloud Storage About Hugo, I saw a lot of articles that deploy to GitHub Pages.
It&amp;rsquo;s easy and cost free, but I did&amp;rsquo;t want to set this blog as my GitHub user page, nor create dummy GitHub account.
Therefore, I deployed on Google Cloud Storage, in Google Cloud Platform.
No particular reason why not AWS S3.</description>
    </item>
    
    <item>
      <title>Hello, Hugo.</title>
      <link>https://yokomotod.io/en/2017/01/01/hello-hugo./</link>
      <pubDate>Sun, 01 Jan 2017 00:00:00 -0500</pubDate>
      
      <guid>https://yokomotod.io/en/2017/01/01/hello-hugo./</guid>
      <description>A happy new year.
I start my blog from this year, with Hugo, with multilingal feature.
Setup Install hugo.
brew update brew install hugo  Generate new site.
hugo new site yokomotod.io  Choose theme By searching theme which support multilingal mode, I found hugo-theme-bootstrap4-blog and hugo-theme-foundation6-blog.
This time I chose hugo-theme-bootstrap4-blog.
git clone https://github.com/alanorth/hugo-theme-bootstrap4-blog.git themes/hugo-theme-bootstrap4-blog  Configuration config.toml
baseurl = &amp;quot;http://yokomotod.io/&amp;quot; theme = &amp;quot;hugo-theme-bootstrap4-blog&amp;quot; # Put all language under sub directories (/en, /ja).</description>
    </item>
    
  </channel>
</rss>